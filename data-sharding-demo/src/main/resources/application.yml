server:
  port: 8080

spring:
  # 应用名称
  application:
    name: data-sharding-demo
  # ShardingSphere的配置项
  shardingsphere:
    props:
      # 打印SQl
      sql-show: true
    # 内存模式
    mode:
      type: Memory
    # 真实数据源配置
    datasource:
      names: master,slave1,slave2
      master:
        driver-class-name: org.postgresql.Driver
        url: jdbc:postgresql://10.0.10.123:5430/postgres?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        type: com.zaxxer.hikari.HikariDataSource
        username: user
        password: 1q2w3e!Q@W#E
      slave1:
        driver-class-name: org.postgresql.Driver
        url: jdbc:postgresql://10.0.10.123:5431/postgres?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        type: com.zaxxer.hikari.HikariDataSource
        username: user
        password: 1q2w3e!Q@W#E
      slave2:
        driver-class-name: org.postgresql.Driver
        url: jdbc:postgresql://10.0.10.123:5432/postgres?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        type: com.zaxxer.hikari.HikariDataSource
        username: user
        password: 1q2w3e!Q@W#E
    # 解决这个 org.postgresql.jdbc.PgDatabaseMetaData.getRowIdLifetime() 方法尚未被实作。

    # ShardingSphere的属性配置
    rules:
      # 读写分离类型，如: Static，Dynamic
      readwrite-splitting:
        data-sources:
          # 自定义数据源名称
          myds:
            type: Static
            props:
              # 写数据源名称
              write-data-source-name: master
              # 读数据源名称，多个从数据源用逗号分隔
              read-data-source-names: slave1,slave2
              # 负载均衡算法名称：alg_round,alg_random,alg_weight
              load-balancer-name: alg_round
        # 负载均衡算法类型
        load-balancers:
          # 轮询算法
          alg_round:
            type: ROUND_ROBIN
          # 随机算法
          alg_random:
            type: RANDOM
          # 权重算法
          alg_weight:
            type: WEIGHT
            props:
              slave1: 1
              slave2: 2
mybatis-plus:
  # 扫描Mapper接口对应的XML文件
  mapper-locations: classpath:mapper/*.xml
  configuration:
    # 日志
    #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 命名自动驼峰转换
    map-underscore-to-camel-case: true
  global-config:
    db-config:
      # 主键类型，auto：数据库id自增
      id-type: assign_id